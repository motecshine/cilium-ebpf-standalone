# Copyright Authors of Cilium
# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
ROOT_DIR := $(PWD)
FLAGS := -I$(ROOT_DIR)/include -I$(ROOT_DIR)/ -D__NR_CPUS__=$(shell nproc --all) -O2 -g

CLANG_FLAGS := ${FLAGS} --target=bpf -std=gnu89 -nostdinc
# eBPF verifier enforces unaligned access checks where necessary, so don't
# let clang complain too early.
CLANG_FLAGS += -Wall -Wextra -Werror -Wshadow
CLANG_FLAGS += -Wno-address-of-packed-member
CLANG_FLAGS += -Wno-unknown-warning-option
CLANG_FLAGS += -Wno-gnu-variable-sized-type-not-at-end
CLANG_FLAGS += -Wdeclaration-after-statement
CLANG_FLAGS += -Wimplicit-int-conversion -Wenum-conversion
CLANG_FLAGS += -Wimplicit-fallthrough
# Mimics the mcpu values set by cilium-agent. See GetBPFCPU().
ifneq ($(KERNEL),54)
CLANG_FLAGS += -mcpu=v3
else
CLANG_FLAGS += -mcpu=v2
endif

LIB := $(shell find $(ROOT_DIR)/ -name '*.h')
BPF_C := $(patsubst %.o,%.c,$(BPF))
BPF_ASM := $(patsubst %.o,%.s,$(BPF))

CLANG      ?= clang-17
HOST_CC    ?= gcc
HOST_STRIP ?= strip

ifeq ($(CROSS_ARCH),arm64)
  HOST_CC = aarch64-linux-gnu-gcc
  HOST_STRIP = aarch64-linux-gnu-strip
else ifeq ($(CROSS_ARCH),amd64)
  HOST_CC = x86_64-linux-gnu-gcc
  HOST_STRIP = x86_64-linux-gnu-strip
endif

# Define all at the top here so that Makefiles which include this one will hit
# the 'all' target first (which we expect to be overridden by the includer).
all:

force:

%.ll: %.c $(LIB)
	@$(ECHO_CC)
	$(QUIET) ${CLANG} ${CLANG_FLAGS} -emit-llvm -c $< -o $@

%.o: %.c $(LIB)
	@$(ECHO_CC)
	$(QUIET) ${CLANG} ${CLANG_FLAGS} -c $< -o $@

preprocess: $(LIB)
	$(QUIET) $(foreach TARGET,$(shell find $(ROOT_DIR)/$(RELATIVE_DIR)/ -name 'bpf_*.c'), \
		echo "  GEN   $(patsubst %.c,%.i,${TARGET})"; \
		${CLANG} $(FLAGS) -E --target=bpf -c ${TARGET} -o $(patsubst %.c,%.i,${TARGET}); )
	$(QUIET) $(foreach SUBDIR,$(SUBDIRS), \
		$(MAKE) $(SUBMAKEOPTS) -C $(SUBDIR) $@ &&) true

assembly: $(BPF_C) $(LIB) $(BPF_ASM)
	$(QUIET) $(foreach SUBDIR,$(SUBDIRS), \
		$(MAKE) $(SUBMAKEOPTS) -C $(SUBDIR) $@ &&) true

.PHONY: all force checkpatch coccicheck check preprocess assembly
